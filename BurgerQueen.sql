--=================================================================================================================[USER 테이블]

-- User 테이블 생성 
CREATE TABLE "USER"(
	USER_NO NUMBER PRIMARY KEY,
	USER_ID VARCHAR2(50) NOT NULL,
	USER_PW VARCHAR2(50) NOT NULL,
	USER_NAME VARCHAR2(40) NOT NULL,
	USER_GENDER CHAR(1) CHECK(USER_GENDER IN('M','F')),
	USER_NICKNAME VARCHAR2(100) NOT NULL,
	USER_SSN VARCHAR2(100) NOT NULL,
	ENROLL_DATE DATE DEFAULT SYSDATE,
	USER_PAY NUMBER,
	USER_JOBNAME VARCHAR2(100),
	PHONE VARCHAR2(100) NOT NULL
);

-- User 테이블 주석 달기
COMMENT ON COLUMN "USER".USER_NO IS '직원 번호';
COMMENT ON COLUMN "USER".USER_ID IS '아이디';
COMMENT ON COLUMN "USER".USER_PW IS '비밀번호';
COMMENT ON COLUMN "USER".USER_NAME IS '직원 이름';
COMMENT ON COLUMN "USER".USER_GENDER IS '직원 성별';
COMMENT ON COLUMN "USER".USER_NICKNAME IS '직원 별칭';
COMMENT ON COLUMN "USER".USER_SSN IS '출생년도';
COMMENT ON COLUMN "USER".ENROLL_DATE IS '입사일';
COMMENT ON COLUMN "USER".USER_PAY IS '직원 시급';
COMMENT ON COLUMN "USER".USER_JOBNAME IS '직원 직급';
COMMENT ON COLUMN "USER".PHONE IS '전화번호';


-- 테이블 확인
SELECT * FROM "USER";

--------------------------------------------
DROP TABLE "USER"; -- 테이블 삭제
DROP SEQUENCE SEQ_USER_NO; -- 시퀀스 삭제 
---------------------------------------------

-- 직원 번호 생성 
CREATE SEQUENCE SEQ_USER_NO 
START WITH 1 
INCREMENT BY 1
NOCYCLE 
NOCACHE;




--	USER_NO/ USER_ID / USER_PW / USER_NAME / USER_GENDER / USER_NICKNAME
--	USER_SSN / ENROLL_DATE / USER_PAY / USER_JOBNAME / PHONE
-- [회원 가입]=====================================
INSERT INTO "USER"
VALUES(SEQ_USER_NO.NEXTVAL,'user01', 'pass01','노성찬', 'M','Noah','1994-01-07',DEFAULT, 10000, '점장', '010-7130-5756');
INSERT INTO "USER"
VALUES(SEQ_USER_NO.NEXTVAL,'user02', 'pass02','이충재', 'M','Ray','1995-11-08',DEFAULT, 8000, '사원', '010-1234-1234');
INSERT INTO "USER"
VALUES(SEQ_USER_NO.NEXTVAL,'user03', 'pass03','김효동', 'M','Modong','1994-08-15',DEFAULT, 8000, '사원', '010-8586-1358');

COMMIT;



-- [아이디 중복 확인]=====================================
SELECT COUNT(*) FROM "USER"
WHERE USER_ID = 'user04'; 
		-- 중복이면 1, 아니면 0 조회


-- [로그인]======================================
SELECT USER_NO, USER_ID, USER_NAME, USER_GENDER, USER_NICKNAME, USER_SSN, USER_PAY, USER_JONNAME, PHONE,
	   TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS')ENROLL_DATE
FROM "USER"
WHERE USER_ID = 'user01'
AND USER_PW ='pass01';


-- [직원 정보 수정]======================================
UPDATE "USER" SET
USER_NAME = 
USER_GENDER 
USER_NICKNAME 
USER_PAY 
USER_JOBNAME  
PHONE 
WHERE USER_NO = 1;  

-- [직원 정보 조회]======================================
SELECT USER_NO, USER_ID, USER_NAME, USER_GENDER, USER_NICKNAME , USER_SSN , USER_PAY , USER_JOBNAME , PHONE 
FROM "USER"
ORDER BY MEMBER_NO  DESC;


-- [비밀번호 변경]======================================
UPDATE "USER" SET
USER_PW = '새 비밀번호'
WHERE USER_NO  = 1 
AND USER_PW  = '현재 비밀번호';

-- [회원 탈퇴]======================================
DELETE FROM "USER"  
WHERE USER_ID = ;

SELECT * FROM "USER";
--=================================================================================================================[Menu 테이블]
DROP TABLE "MENU" CASCADE CONSTRAINTS;

-- 메뉴 테이블 생성 
CREATE TABLE "MENU"(
	MENU_NO NUMBER PRIMARY KEY,
	MENU_TYPE VARCHAR2(15) NOT NULL, 
	MENU_NAME VARCHAR2(30) NOT NULL,
	MENU_PRICE NUMBER NOT NULL
);

--ALTER TABLE "MENU" ADD PRIMARY KEY(MENU_NAME);

-- 메뉴 테이블 주석달기
COMMENT ON COLUMN "MENU".MENU_NO IS '메뉴 번호';
COMMENT ON COLUMN "MENU".MENU_TYPE IS '메뉴 구분';
COMMENT ON COLUMN "MENU".MENU_NAME IS '메뉴명';
COMMENT ON COLUMN "MENU".MENU_PRICE IS '가격';

-- 메뉴 테이블 조회
SELECT * FROM MENU;

CREATE SEQUENCE SEQ_MENU_NO;

-- 기본 데이터 추가
-- [햄버거] 
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','불고기 버거',6000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','쉬림프 버거',7000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','어린이 버거',4000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','존맛탱 버거',8000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','더블 치즈 버거',9000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '햄버거','내장 파괴 버거',12000);

-- [사이드]
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','치즈 스틱 (2EA)',3000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','어니언 링 (3EA)',2000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','크리미 모짜볼 (3EA)',4000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','치킨텐더 (5EA)',5000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','코운슬로',2000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','감자튀김',2000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '사이드','아이스크림',1500);

-- [음료]
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','콜라(제로)',2000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','콜라',1500);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','사이다(제로)',2000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','사이다',1500);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','레몬에이드',3000);
INSERT INTO "MENU"
VALUES(SEQ_MENU_NO.NEXTVAL, '음료','마운틴듀',1500);

SELECT * FROM MENU;

COMMIT;
--=================================================================================================================[ORDERS 테이블]


-- 주문 테이블 생성
DROP TABLE "ORDERS" CASCADE CONSTRAINTS;

CREATE TABLE "ORDERS"(
	ORDERS_NO NUMBER PRIMARY KEY,  
	ORDERS_DATE DATE DEFAULT SYSDATE
);



-- 주문 테이블 주석 달기
COMMENT ON COLUMN "ORDERS".ORDERS_NO IS '주문 번호';
COMMENT ON COLUMN "ORDERS".ORDERS_DATE IS '주문 날짜';

-- 주문번호 생성
CREATE SEQUENCE SEQ_ORDERS_NO 
START WITH 1 
INCREMENT BY 1
NOCYCLE 
NOCACHE;


DROP TABLE "ORDERS_MENU" CASCADE CONSTRAINTS;
-- 주문별 메뉴 테이블
-- 주문번호  1  1  1
-- 메뉴이름 사 콜  햄
-- 수량      2  1  1
CREATE TABLE "ORDERS_MENU" (
	ORDERS_NO NUMBER REFERENCES "ORDERS",
	MENU_NO NUMBER REFERENCES "MENU",
	AMOUNT NUMBER DEFAULT 1 NOT NULL,
	PRIMARY KEY (ORDERS_NO, MENU_NO)
);


-- 1. 주문번호 생성
SELECT SEQ_ORDERS_NO.NEXTVAL FROM DUAL;

-- 2. 주문 삽입
INSERT INTO "ORDERS" VALUES(1, DEFAULT); -- 주문번호(1) 
INSERT INTO "ORDERS" VALUES(1, DEFAULT-1)); -- 주문번호(1) 

SELECT * FROM "ORDERS";

-- 3. 주문별 메뉴 테이블 삽입(for문으로 DAO(insert) 호출)
INSERT INTO ORDERS_MENU VALUES(1, 1, 1);
INSERT INTO ORDERS_MENU VALUES(1, 7, 2);
INSERT INTO ORDERS_MENU VALUES(1, 14, 1);


SELECT * FROM ORDERS_MENU;

COMMIT;

-- 특정 주문 조회
--SELECT LISTAGG( MENU_NAME, ',' ) WITHIN GROUP (ORDER BY MENU_NAME )
SELECT MENU_NAME
FROM "ORDERS"
JOIN "ORDERS_MENU" USING(ORDERS_NO)
JOIN "MENU" USING (MENU_NAME)
WHERE ORDERS_NO = 1;


COMMIT;

SELECT ORDERS_NO, ORDERS_DATE,
	(SELECT  LISTAGG( MENU_NAME || '(' || MENU_PRICE || ') ' || AMOUNT || '개', ', ' )  WITHIN GROUP (ORDER BY MENU_NAME) 
		FROM "ORDERS" O2
		JOIN "ORDERS_MENU" ON (O2.ORDERS_NO = "ORDERS_MENU".ORDERS_NO)
		JOIN "MENU" USING (MENU_NO)
		WHERE O2.ORDERS_NO = O1.ORDERS_NO) AS MENU
	,(SELECT SUM(MENU_PRICE)
		FROM "ORDERS" O2
		JOIN "ORDERS_MENU" ON (O2.ORDERS_NO = "ORDERS_MENU".ORDERS_NO)
		JOIN "MENU" USING (MENU_NO)
		WHERE O2.ORDERS_NO = O1.ORDERS_NO) TOTAL
FROM "ORDERS" O1
WHERE EXTRACT(MONTH FROM SYSDATE)||'월' = '9월';
09월;

COMMIT;
WHERE ORDERS_NO = 4;



----------------------------------------------------------------------
SELECT ORDERS_NO, ORDERS_DATE,
	(SELECT  LISTAGG( MENU_NAME || '(' || MENU_PRICE || ') ' || AMOUNT || '개', ', ' )  WITHIN GROUP (ORDER BY MENU_NAME) 
		FROM "ORDERS" O2
		JOIN "ORDERS_MENU" ON (O2.ORDERS_NO = "ORDERS_MENU".ORDERS_NO)
		JOIN "MENU" USING (MENU_NO)
		WHERE O2.ORDERS_NO = O1.ORDERS_NO) AS MENU
	,(SELECT SUM(MENU_PRICE)
		FROM "ORDERS" O2
		JOIN "ORDERS_MENU" ON (O2.ORDERS_NO = "ORDERS_MENU".ORDERS_NO)
		JOIN "MENU" USING (MENU_NO)
		WHERE O2.ORDERS_NO = O1.ORDERS_NO) TOTAL
FROM "ORDERS" O1;


SELECT * FROM "ORDERS"; 
SELECT * FROM "ORDERS_MENU";

SELECT EXTRACT(MONTH FROM SYSDATE)||'월'
FROM DUAL;

WHERE TO_CHAR(SYSDATE,'MM') = 9;

SELECT TO_CHAR(SYSDATE,'MM')||'월'
FROM DUAL

WHERE EXTRACT(MONTH FROM SYSDATE)||'월' = 9;
---------------------------------------------


		